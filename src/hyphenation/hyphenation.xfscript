! Divvun & Giellatekno - open source grammars for Sámi and other languages
! Copyright © 2000-2010 The University of Tromsø & the Norwegian Sámi Parliament
! http://giellatekno.uit.no & http://divvun.no
!
! This program is free software; you can redistribute and/or modify
! this file under the terms of the GNU General Public License as published by
! the Free Software Foundation, either version 3 of the License, or
! (at your option) any later version. The GNU General Public License
! is found at http://www.gnu.org/licenses/gpl.html. It is
! also available in the file $GTHOME/LICENSE.txt.
!
! Other licensing options are available upon request, please contact
! giellatekno@uit.no or feedback@divvun.no

! ========================= !
! Hyphenator for Skolt Sámi !
! ========================= !

! This is a file copied from sme via smn. It needs to be adjusted for sms.

echo <<defining Cns and Vow...>>

define Vow       [ a | á | e | i | o | u | y | æ | ø | å | ä | ö | õ |
                   A | Á | E | I | O | U | Y | Æ | Ø | Å | Ä | Ö | Õ |
é | ó | ú | í | à | è | ò | ù | ì | ë | ü | ï | â | ê | ô | û | î | ã | ý | 
É | Ó | Ú | Í | À | È | Ò | Ù | Ì | Ë | Ü | Ï | Â | Ê | Ô | Û | Î | Ã | Ý ] (ʹ) ;


!! Copy from smn starts here

! smn diphthongs: /iä/, /ie/, /uo/, /uá/, /ye/, ==> 2ndVow = ä, á, e, o
! smn loanword diphthongs: neutralistiđ, fauna, leutnánta

define 2ndVow [ e | i | u | o | á | ä | 
                E | I | U | O | Á | Ä ] ;

!define 3dVow [ u | U ] ;


define VowNot2ndVow   [ Vow - 2ndVow ] ;

!define VowNot3dVow   [ Vow - 3dVow ] ;


define U   [ u | U ] ;
define O   [ o | O ] ;
define A   [ a | A ] ;
define E   [ e | E ] ;
define I   [ i | I ] ;
define Y   [ y | Y ]  ;
define OTilde   [ õ | Õ ] ; ! Renamed from Õ to avoid non-ASCII chars
define AUmlaut	[ ä | Ä ] ;
define ACircumflex  [ â | Â ] ;
define ARing  [ å | Å ] ;
define EDot  [ ẹ | Ẹ ] ;
define SOFT  [ ʹ ] ;
!define EO  [ e | E | o | O ] ; ! What are these for? 2023-11-30
!define EOA [ e | E | o | O | a | A ] ;
!define IAO [ i | I | a | A | o | O ] ;
!define UI  [ u | U | i | I ] ;

define UACircumfdipht     [ u â | U â | U Â ] ;
define IEdipht      [ i e | I e | I E ] ;
define UOTildedipht      [ u õ | U õ | U Õ ] ;
!this far 2023-11-30
!define EAdipht      [ e a | E a | E A ] ;
!define OAdipht      [ o a | O a | O A ] ;
!define OUdipht      [ o u | O u | O U ] ; ! jour-na-lis-sta
define AUdipht      [ a u | A u | A U ] ; ! fau-na, Lauv-sjø-vo-la, Kår-ve-jau-re ok.
define EUdipht      [ e u | E u | E U ] ; ! leut-nán-ta
!define AEdipht      [ a e | A e | A E ] ; ! lae-sta-di-us,
!define OslashYdipht [ ø y | Ø y | Ø Y ] ; ! nøyt-rála  ! Renamed from ØYdipht to avoid non-ASCII chars
define OEdipht      [ o e | O e | O E ] ; ! goe-the
define IOslashdipht [ i ø | I ø | I Ø ] ; ! skiøld     ! Renamed from IØdipht to avoid non-ASCII chars
define IOdipht      [ i o | I o | I O ] ; ! skiold, nation
define IAEdipht     [ i ä | I ä | I Ä ] ; ! iä
define YEdipht      [ y e | Y e | Y E ] ; ! kye-li



!define EAUtripht [ e a u | E a u | E A U ] ; !Bor-deaux, Beau-fort
!define IEUtripht [ i e u | I e u | I E U ] ; !Nieu-siedler



define dipht [ IEdipht | UAAdipht | UOdipht | AUdipht |
               EUdipht | OEdipht | IOslashdipht | IOdipht |
               IAEdipht | YEdipht ] ;

!define tripht [ EAUtripht | IEUtripht ] ;

define VowNotU      [ Vow - U   ] ;
define VowNotO      [ Vow - O   ] ;
define VowNotA      [ Vow - A   ] ;
define VowNotE      [ Vow - E   ] ;
define VowNotI      [ Vow - I   ] ;
define VowNotEO     [ Vow - EO  ] ;
define VowNotEOA    [ Vow - EOA ] ;
define VowNotIAO    [ Vow - IAO ] ;
define VowNotY      [ Vow - Y   ] ;
define VowNotOslash [ Vow - Oslash   ] ;  ! Renamed from VowNotØ to avoid non-ASCII chars
define VowNotUI     [ Vow - UI  ] ;
define LongVow      [ a a | e e | i i | o o | u u | á á | ä ä | ö ö ] ;


!! Copy from smn ends here



define Cns [ b | c | č | ʒ | ǯ | d | đ | f | g | ǥ | ǧ | h | j | k | ǩ | l | m | n | ŋ |
             B | C | Č | Ʒ | Ǯ | D | Đ | F | G | Ǥ | Ǧ | H | J | K | Ǩ | L | M | N | Ŋ |
             p | q | r | s | š | t | ŧ | v | w | x | z | ž |
             P | Q | R | S | Š | T | Ŧ | V | W | X | Z | Ž ] ;

define S    [ S | s | Š | š ] ;
define Cnss [ Cns - S - n ] ;
define Sgm  [ Cns | Vow ] ;


!define Cns [ Cnssymb | Vow i ] ;

echo << Rules>>

define beforeS [..] -> %^ || Vow Cns+ _ S Cnss Vow ;
define hyphinsert [..] -> %^ || Vow Cns* _ Cns Vow;

define nicelook %^ -> %- ; ! remove
echo <<Combining...>>

read regex [
beforeS
.o. hyphinsert
.o. nicelook
 ] ;


! To compile directly, do:
! xfst -e "source hyphenation.xfscript"
! invert net
! save h.fst
