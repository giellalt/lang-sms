! Divvun & Giellatekno - open source grammars for Sámi and other languages
! Copyright © 2000-2010 The University of Tromsø & the Norwegian Sámi Parliament
! http://giellatekno.uit.no & http://divvun.no
!
! This program is free software; you can redistribute and/or modify
! this file under the terms of the GNU General Public License as published by
! the Free Software Foundation, either version 3 of the License, or
! (at your option) any later version. The GNU General Public License
! is found at http://www.gnu.org/licenses/gpl.html. It is
! also available in the file $GTHOME/LICENSE.txt.
!
! Other licensing options are available upon request, please contact
! giellatekno@hum.uit.no or divvun@samediggi.no


!!               !!!Skolt Sámi morphological analyser

!! This file contains all definitions of symbols written by
!! more than one character, and it contains the initial __Root__ lexicon.

Multichar_Symbols  !!≈ !!!@CODE@ definitions


!! !!Grammatical tags

!! !Parts of speech

+A	      !!= * @CODE@
+V	      !!= * @CODE@
+N	      !!= * @CODE@
+Adv      !!= * @CODE@
+Pron     !!= * @CODE@
+CS	      !!= * @CODE@
+CC	      !!= * @CODE@
+Adp      !!= * @CODE@
+Po	      !!= * @CODE@
+Pr	      !!= * @CODE@
+Interj   !!= * @CODE@
+Pcle     !!= * @CODE@

!! !Subtypes

+Guess    !!= * @CODE@

+Prop     !!= * @CODE@
+Pred     !!= * @CODE@
+Attr     !!= * @CODE@
+Pers     !!= * @CODE@
+Dem      !!= * @CODE@
+Interr   !!= * @CODE@
+Refl     !!= * @CODE@
+Recipr   !!= * @CODE@
+Rel      !!= * @CODE@
+Indef    !!= * @CODE@

!! !Number
+Sg	      !!= * @CODE@
+Pl	      !!= * @CODE@

!! !Case
+Nom      !!= * @CODE@
+Gen      !!= * @CODE@
+Acc      !!= * @CODE@
+Ill      !!= * @CODE@
+Ine      !!= * @CODE@
+Ela      !!= * @CODE@
+Com      !!= * @CODE@
+Ess      !!= * @CODE@
+Par      !!= * @CODE@
+Abe      !!= * @CODE@

!! !Possessive suffix
+PxSg1    !!= * @CODE@
+PxSg2    !!= * @CODE@
+PxSg3    !!= * @CODE@
+PxPl1    !!= * @CODE@
+PxPl2    !!= * @CODE@
+PxPl3    !!= * @CODE@

!! !Adjective declension
+Comp     !!= * @CODE@
+Superl   !!= * @CODE@

!! !Verb forms
+Actor    !!= * @CODE@
+Actio    !!= * @CODE@
+ActEss   !!= * @CODE@ -men
+NegConv2 !!= * @CODE@ fix!

+Act	      !!= * @CODE@
+Pass	      !!= * @CODE@
+Ind	      !!= * @CODE@
+Prs	      !!= * @CODE@
+Prt	      !!= * @CODE@
+Pot	      !!= * @CODE@
+Cond	      !!= * @CODE@
+Imprt	      !!= * @CODE@
+ImprtII      !!= * @CODE@
+Sup	      !!= * @CODE@

+Inf		 !!= * @CODE@
+GerTemp     !!= * @CODE@ -een
+GerInstr    !!= * @CODE@ -eel
+ConNeg		 !!= * @CODE@
+Neg		 !!= * @CODE@
+PrsPrc		 !!= * @CODE@
+PrfPrc		 !!= * @CODE@
+VGen		 !!= * @CODE@
+VAbess		 !!= * @CODE@


!! !Person-number
+Sg1	      !!= * @CODE@
+Sg2	      !!= * @CODE@
+Sg3	      !!= * @CODE@
+Pl1	      !!= * @CODE@
+Pl2	      !!= * @CODE@
+Pl3	      !!= * @CODE@
+4    !!= * @CODE@ impersonal fourth person, look into..
+13          !!= * @CODE@ used in combination with +Imp+13+ConNeg
+2	     !!= * @CODE@ used in combination with +Imp+2+ConNeg

!! !Derivation
+Der/A  !!=derived adjective

!! !Government
+Gov/Gen
+Gov/Loc	!!= * @CODE@ this will be added to the preposition tagging __mâŋŋa jââđast__

!! !Semantic properties of names
+Ani      !!= * @CODE@
+Mal      !!= * @CODE@
+Fem      !!= * @CODE@
+Sur      !!= * @CODE@
+Plc      !!= * @CODE@
+Org      !!= * @CODE@
+Obj      !!= * @CODE@

!! !Clitic
+Clt      !!= * @CODE@
!! * NB! +Foc is missing

!! !Punctuation
+CLB   !!= * @CODE@
+PUNCT !!= * @CODE@
+HYPH  !!= * @CODE@
+PAR   !!= * @CODE@

!! !!Letters

!! !Skolt Saami letters
!! These definitions are probably not needed
č  !!= * @CODE@
đ  !!= * @CODE@
š  !!= * @CODE@
ŧ  !!= * @CODE@
ž  !!= * @CODE@
Ʒ  !!= * @CODE@
ǥ  !!= * @CODE@
ǧ  !!= * @CODE@
ǩ  !!= * @CODE@
Ǯ  !!= * @CODE@

!! !Archiphonemes

!! These are for letters with special behaviour.
!! Say that all m-s change to n in a given context,
!! but not this m, because it is m2.
!! In twolc these are then defined m2:m, etc, i.e.
!! the m2 is an m, although it is a different m.

n1 !!= * @CODE@ Check this one. It could be an old ŋ
m2 !!= * @CODE@
n2 !!= * @CODE@
h2 !!= * @CODE@
b3 !!= * @CODE@
d3 !!= * @CODE@
g3 !!= * @CODE@
m3 !!= * @CODE@
h3 !!= * @CODE@

!! !!Diacritic marks
!! These symbol govern the way the morphophonological rules treat the affix string.

!! This project started out using arbitrary names, X1, X2..., but since they were
!! hard to remember, we changed to (a bit) more transparent names (^DIADEL, ...).
!! On the TODO-list: Change all X1, X2, ... to easy-to-remember names.

!! !! Gradation triggers 2015.01.23
 %^XSt2St	!!= * @CODE@ Causes weakening from extra strong to strong
 %^XSt2W	!!= * @CODE@ Causes weakening from extra strong to weak
 %^St2W		!!= * @CODE@ Causes weakening from strong to weak
 %^W2St		!!= * @CODE@ Causes strengthening from weak to strong
 %^W2XSt	!!= * @CODE@ Causes strengthening from weak to extra strong
 %^St2XSt	!!= * @CODE@ Causes strengthening from strong to extra strong

!! !Diacritic with mnemonic names

%^1VOW	 !!= * @CODE@ vowel position and length
%^2VOW	 !!= * @CODE@
%^3VOW	 !!= * @CODE@
%^4VOW	 !!= * @CODE@
%^5VOW   !!= * @CODE@
%^CLong		!!= * @CODE@
%^CShort	!!= * @CODE@
%^CXLong	!!= * @CODE@
%^DIADEL !!= * @CODE@ deleting diacritic
%^DIAINS !!= * @CODE@ inserting diacritic
%^FRICG     !!= * @CODE@ for causing fricative ǥ vueʹlǧǧed+V+Imp+Pl3: vuâlǥǥaz
%^IMPSG2	!!= * @CODE@
%^INDPRSSG3 !!= * @CODE@
%^P3     !!= * @CODE@ ... means what?
%^PAL       !!= * @CODE@ for placing palatalization mark __ʹ__
%^PALNo     !!= * @CODE@ This is to facilitate +Sg+Nom lemma:stem equivalence; it removes palatal supersegmental
%^RmVow     !!= * @CODE@ for removing vowels e, â, a in second syllable before consonant
%^VC         !!= * @CODE@ Voicing s:z š:ž
%^VOWBack  !!= * @CODE@ for backing
%^VOWFront  !!= * @CODE@ for fronting
%^VOWL      !!= * @CODE@ for lengthening
%^VOWLower  !!= * @CODE@ for lowering
%^VOWRaise  !!= * @CODE@ for raising
%^VOWSH 	!!= * @CODE@ for shortening
%^VOWXSH	  !!= * @CODE@ for extra shortening
%^VOWTense  !!= * @CODE@ for tense vowel miârr:mieʹrre
%^VOWLax   !!= * @CODE@ e:â
%^VOWXL     !!= * @CODE@ for extralengthening
 %^Â		!!= * @CODE@ Indicates placement of â in stem

%{VU%}         !!= * @CODE@ used with stuuʹl
%{A1%}         !!= * @CODE@ used with vuejted
%{E1%}         !!= * @CODE@ used with kåʹmrded
%{Â1%}         !!= * @CODE@ used with mainsted
%{%ʹ%}      !!= * @CODE@ archiform for MODIFIER LETTER ACUTE ACCENT used in stems where the lemma does not contain a MODIFIER LETTER ACUTE ACCENT and yet the paradigm requires one.
%{EÂ%} 	    !!= * @CODE@ archiform for ie:eä variation, e.g. pieʹǩǩ+N+Sg+Ill:peâkka
!! !Diacritic symbols without mnemonic names
X1 !!= * @CODE@
X2 !!= * @CODE@
X3 !!= * @CODE@
X4 !!= * @CODE@
X5 !!= * @CODE@
X6 !!= * @CODE@
X7 !!= * @CODE@
X8 !!= * @CODE@
X9 !!= * @CODE@

Q3 !!= * @CODE@
Q4 !!= * @CODE@
Q5 !!= * @CODE@
Q6 !!= * @CODE@
Q7 !!= * @CODE@
Q8 !!= * @CODE@
Q9 !!= * @CODE@

Y1 !!= * @CODE@
Y2 !!= * @CODE@
Y3 !!= * @CODE@
Y4 !!= * @CODE@
Y5 !!= * @CODE@
Y6 !!= * @CODE@
Y7 !!= * @CODE@
Y8 !!= * @CODE@
Y9 !!= * @CODE@


!! !!Escaped symbols

!! Symbols that need to be escaped on the lower side (towards twolc):
 »7     !! * »
 «7     !! * «
 %[%>%] !! * >
 %[%<%] !! * <

!! !!Flag diacritics
!! We have manually optimised the structure of our lexicon using following
!! flag diacritics to restrict morhpological combinatorics - only allow compounds
!! with verbs if the verb is further derived into a noun again:
 @P.NeedNoun.ON@    !!≈ | @CODE@ | (Dis)allow compounds with verbs unless nominalised
 @D.NeedNoun.ON@    !!≈ | @CODE@ | (Dis)allow compounds with verbs unless nominalised
 @C.NeedNoun@       !!≈ | @CODE@ | (Dis)allow compounds with verbs unless nominalised
!! 
!! For languages that allow compounding, the following flag diacritics are needed
!! to control position-based compounding restrictions for nominals. Their use is
!! handled automatically if combined with +CmpN/xxx tags. If not used, they will
!! do no harm.
 @P.CmpFrst.FALSE@ !!≈ | @CODE@ | Require that words tagged as such only appear first
 @D.CmpLast.TRUE@  !!≈ | @CODE@ | Block such words from entering R
 @D.CmpNone.TRUE@  !!≈ | @CODE@ | Combines with the next tag to prohibit compounding
 @U.CmpNone.FALSE@ !!≈ | @CODE@ | Combines with the prev tag to prohibit compounding
 @P.CmpOnly.TRUE@  !!≈ | @CODE@ | Sets a flag to indicate that the word has passed R
 @D.CmpOnly.FALSE@ !!≈ | @CODE@ | Disallow words coming directly from root.
!! 
!! Use the following flag diacritics to control downcasing of derived proper
!! nouns (e.g. Finnish Pariisi -> pariisilainen). See e.g. North Sámi for how to use
!! these flags. There exists a ready-made regex that will do the actual down-casing
!! given the proper use of these flags.
 @U.Cap.Obl@        !!≈ | @CODE@ | Allowing downcasing of derived names: deatnulasj.
 @U.Cap.Opt@        !!≈ | @CODE@ | Allowing downcasing of derived names: deatnulasj.


!! !!!Basic lexica, pointing to the other lexicon files


LEXICON Root 	  !!= * @CODE@
 AdjectiveRoot ;  !!= * @CODE@
 Adposition ;	  !!= * @CODE@
 NounRoot ;		  !!= * @CODE@
 ProperNoun ;	  !!= * @CODE@
 VerbRoot ;		  !!= * @CODE@
 Adverb ;		  !!= * @CODE@
 Subjunction ;	  !!= * @CODE@
 Conjunction ;	  !!= * @CODE@
 Interjection ;	  !!= * @CODE@
 Pronoun ;		  !!= * @CODE@
 Numeral ;		  !!= * @CODE@
 Punctuation ;	  !!= * @CODE@
 Particle ;	      !!= * @CODE@

 EXCEPTIONS ;

 N_NEWWORDS ;    !!= * @CODE@ These are new nouns beginning 2015-01-10

!! -----

!! * Postposition ; is still not included
!! * Preposition ;  is still not included


!! Adpositions
!! Postpositions with government tagging possible
LEXICON PO_
+Po: # ;

LEXICON PO-GOV-GEN_
+Po: # ;


!! Prepositions with government tagging possible
LEXICON PRE_
+Pre: # ;

LEXICON PRE-GOV-LOC-TEMP_
+Pre+Temp+Gov/Loc: # ;

