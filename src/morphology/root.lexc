! Divvun & Giellatekno - open source grammars for Sámi and other languages
! Copyright © 2000-2010 The University of Tromsø & the Norwegian Sámi Parliament
! http://giellatekno.uit.no & http://divvun.no
!
! This program is free software; you can redistribute and/or modify
! this file under the terms of the GNU General Public License as published by
! the Free Software Foundation, either version 3 of the License, or
! (at your option) any later version. The GNU General Public License
! is found at http://www.gnu.org/licenses/gpl.html. It is
! also available in the file $GTHOME/LICENSE.txt.
!
! Other licensing options are available upon request, please contact
! giellatekno@hum.uit.no or divvun@samediggi.no


!!               !!!Skolt Sámi morphological analyser

!! This file contains all definitions of symbols written by
!! more than one character, and it contains the initial __Root__ lexicon.

Multichar_Symbols  !!≈ !!!@CODE@ definitions
+WORK    !!= * @CODE@ Incoming entries requiring further classification

!! !!Grammatical tags

!! !Parts of speech

+A	      !!= * @CODE@ Adjective
+V	      !!= * @CODE@ Verb
+N	      !!= * @CODE@ Noun
+Adv      !!= * @CODE@ Adverb
+Pron     !!= * @CODE@ Pronoun
+CS	      !!= * @CODE@ Subjunction
+CC	      !!= * @CODE@ Conjunction
+Adp      !!= * @CODE@ Adposition
+Po	      !!= * @CODE@ Postposition
+Pr	      !!= * @CODE@ Preposition
+Interj   !!= * @CODE@ Interjection
+Pcle     !!= * @CODE@ Particle

!! !Subtypes

+Guess    !!= * @CODE@

+Prop     !!= * @CODE@ Proper noun
+Pred     !!= * @CODE@
+Attr     !!= * @CODE@ Attributive form
+Pers     !!= * @CODE@ Personal
+Dem      !!= * @CODE@ Demonstrative
+Interr   !!= * @CODE@ Interrogative
+Refl     !!= * @CODE@ Reflexive
+Recipr   !!= * @CODE@ Reciprocal
+Rel      !!= * @CODE@ Relative
+Indef    !!= * @CODE@ Indefinite

!! !Number
+Sg	      !!= * @CODE@ Singular = õõutilååkk
+Pl	      !!= * @CODE@ Plural = määŋgailååkk

!! !Case
+Nom      !!= * @CODE@ Nominative = nominativ
+Gen      !!= * @CODE@
+Acc      !!= * @CODE@
+Ill      !!= * @CODE@
+Ine      !!= * @CODE@
+Ela      !!= * @CODE@
+Com      !!= * @CODE@
+Ess      !!= * @CODE@
+Par      !!= * @CODE@
+Abe      !!= * @CODE@

!! !Possessive suffix
+PxSg1    !!= * @CODE@ 
+PxSg2    !!= * @CODE@
+PxSg3    !!= * @CODE@
+PxPl1    !!= * @CODE@
+PxPl2    !!= * @CODE@
+PxPl3    !!= * @CODE@

!! !Adjective declension
+Comp     !!= * @CODE@
+Superl   !!= * @CODE@

!! !Verb forms      Veʹrbbååʹbleʹǩ
+Actor    !!= * @CODE@
+Actio    !!= * @CODE@
+ActEss   !!= * @CODE@ -men
+NegConv2 !!= * @CODE@ fix!

+Act	      !!= * @CODE@
+Pass	      !!= * @CODE@
+Ind	      !!= * @CODE@
+Prs	      !!= * @CODE@
+Prt	      !!= * @CODE@
+Pot	      !!= * @CODE@
+Cond	      !!= * @CODE@
+Imprt	      !!= * @CODE@
+ImprtII      !!= * @CODE@
+Sup	      !!= * @CODE@

+Inf		 !!= * @CODE@
+GerTemp     !!= * @CODE@ -een
+GerInstr    !!= * @CODE@ -eel
+ConNeg		 !!= * @CODE@
+Neg		 !!= * @CODE@
+PrsPrc		 !!= * @CODE@
+PrfPrc		 !!= * @CODE@
+VGen		 !!= * @CODE@
+VAbess		 !!= * @CODE@


!! !Person-number
+Sg1	      !!= * @CODE@
+Sg2	      !!= * @CODE@
+Sg3	      !!= * @CODE@
+Pl1	      !!= * @CODE@
+Pl2	      !!= * @CODE@
+Pl3	      !!= * @CODE@
+Sg4    !!= * @CODE@ impersonal fourth person, in MT a Pl4 might be needed
+13          !!= * @CODE@ used in combination with +Imp+13+ConNeg
+2	     !!= * @CODE@ used in combination with +Imp+2+ConNeg

!! !Derivation
+Der/A  !!=derived adjective
+Der/Dim  !!= * @CODE@ diminutive derivation N»N
+Der/mõs  !!= * @CODE@ superlative One-syllable foot
+Der/mus  !!= * @CODE@ superlative
+Der/umus  !!= * @CODE@ superlative 
+Der/teʹm !!= * @CODE@ carative derivation N»A
+Der/t !!= * @CODE@ carative derivation N»A for subsequent derivation

!! !Government tags
+%<gen%>
+%<loc%>	!!= * @CODE@ this will be added to the preposition tagging __mâŋŋa jââđast__

!! !Semantic properties of names
+Sem/Ani      !!= * @CODE@ Animate
+Sem/Mal      !!= * @CODE@ Male
+Sem/Fem      !!= * @CODE@ Female
+Sem/Sur      !!= * @CODE@ Surname
+Sem/Plc      !!= * @CODE@ Place name
+Sem/Org      !!= * @CODE@ Organization
+Sem/Obj      !!= * @CODE@ 

!! !Clitic
+Clt      !!= * @CODE@
+Qst      !!= * @CODE@ Question particle -a
!! * NB! +Foc is missing

!! !Punctuation
+CLB   !!= * @CODE@
+PUNCT !!= * @CODE@
+HYPH  !!= * @CODE@
+PAR   !!= * @CODE@

!! !!Letters

!! !Skolt Saami letters
!! These definitions are probably not needed
č  !!= * @CODE@
đ  !!= * @CODE@
š  !!= * @CODE@
ŧ  !!= * @CODE@
ž  !!= * @CODE@
Ʒ  !!= * @CODE@
ǥ  !!= * @CODE@
ǧ  !!= * @CODE@
ǩ  !!= * @CODE@
Ǯ  !!= * @CODE@
ǯ
Ǥ

!! !Archiphonemes

!! These are for letters with special behaviour.
!! Say that all m-s change to n in a given context,
!! but not this m, because it is m2.
!! In twolc these are then defined m2:m, etc, i.e.
!! the m2 is an m, although it is a different m.

n1 !!= * @CODE@ Check this one. It could be an old ŋ
m2 !!= * @CODE@
n2 !!= * @CODE@
h2 !!= * @CODE@
b3 !!= * @CODE@
d3 !!= * @CODE@
g3 !!= * @CODE@
m3 !!= * @CODE@
h3 !!= * @CODE@

!! !!Diacritic marks
!! These symbol govern the way the morphophonological rules treat the affix string.

!! This project started out using arbitrary names, X1, X2..., but since they were
!! hard to remember, we changed to (a bit) more transparent names (^DIADEL, ...).
!! On the TODO-list: Change all X1, X2, ... to easy-to-remember names.

!! !!Consonant lengthening
%{XC%}

!!  !! CHARACTERISTIC BREAKDOWN 2015-02-17
%^VV2V        !!= * @CODE@ Shortens vowel 
%^V2VV 	      !!= * @CODE@ Lengthens vowel
%^CC2C 	      !!= * @CODE@ Shortens consonant
%^C2CC 	      !!= * @CODE@ Lengthens consonant
%^CC2CCC 	!!= * @CODE@ Strong to Extra Strong consonant
%^C2CCC 	!!= * @CODE@ Weak to Extra strong consonant
%^CCC2C 	!!= * @CODE@ Extra Strong to Weak consonant
%^CCC2CC 	!!= * @CODE@ Extra Strong to Strong consonant
%^XYYY2XYY 	!!= * @CODE@ Weakens Extra strong to strong consonant cluster
%^XYYY2XY 	!!= * @CODE@ Weakens Extra strong to weak consonant cluster
%^XYY2XY      !!= * @CODE@ Shortens consonant cluster
%^XY2XYY      !!= * @CODE@ Lengthens consonant cluster
%^XYY2VY	!!= * @CODE@ Consonant cluster to vowel and consonant sijdd:siid
%^XYY2VYY	!!= * @CODE@ Consonant cluster to vowel and geminate uvdd:ouʹdd

%^PenVV2V        !!= * @CODE@ Shortens vowel in penultimate syllable
%^PenV2VV        !!= * @CODE@ Lengthens vowel in penultimate syllable
%^PenCC2C        !!= * @CODE@ Shortens consonant in penultimate syllable
%^PenCC2CCC     !!= * @CODE@ Extra Lengthens consonant in penultimate syllable
%^PenC2CC        !!= * @CODE@ Lengthens consonant in penultimate syllable

!! !!Gradation triggers 2015.01.23
 %^XSt2St	!!= * @CODE@ Causes weakening from extra strong to strong
 %^XSt2W	!!= * @CODE@ Causes weakening from extra strong to weak
 %^St2W		!!= * @CODE@ Causes weakening from strong to weak
 %^W2St		!!= * @CODE@ Causes strengthening from weak to strong
 %^W2XSt	!!= * @CODE@ Causes strengthening from weak to extra strong
 %^St2XSt	!!= * @CODE@ Causes strengthening from strong to extra strong

!! !! Gradation triggers 2015.02.09 For	Consonant Clusters
 %^XSt2StCluster     !!= * @CODE@ Causes weakening from extra strong to strong in clusters
 %^St2XStCluster     !!= * @CODE@ Causes strengthening from strong to extra strong in clusters



!! !Diacritic with mnemonic names

%^1VOW	 !!= * @CODE@ vowel position and length
%^2VOW	 !!= * @CODE@
%^3VOW	 !!= * @CODE@
%^4VOW	 !!= * @CODE@
%^5VOW   !!= * @CODE@
%^CLong		!!= * @CODE@
%^CShort	!!= * @CODE@
%^CXLong	!!= * @CODE@
%^DIADEL !!= * @CODE@ deleting diacritic
%^DIAINS !!= * @CODE@ inserting diacritic
%^FRICG     !!= * @CODE@ for causing fricative ǥ vueʹlǧǧed+V+Imp+Pl3: vuâlǥǥaz
%^IMPSG2	!!= * @CODE@
%^INDPRSSG3 !!= * @CODE@
%^PenVow2a	!!= * @CODE@ Changes penultimate vowel to a; e:a â:a

%^P3     !!= * @CODE@ ... means what?
%^PAL       !!= * @CODE@ for placing palatalization mark __ʹ__
%^PALNo     !!= * @CODE@ This is to facilitate +Sg+Nom lemma:stem equivalence; it removes palatal supersegmental
%^PALE   !!= * @CODE@ Palatalisation causes â:e, etc.
%^PALÄ   !!= * @CODE@ Palatalisation causes â:ä, etc.
%^PALẸ	 !!= * @CODE@ Palatalisation causes å:ẹ suẹjj BUT suejjin (cf. 2012: 150, but )
 %^PenPAL   !!= * @CODE@ Penultimate Palatalisation cieʹǩǩes+N+Sg+Gen: ceäkˈkaz
 %^PenPALNo   !!= * @CODE@ Penultimate Palatalisation
 %^PenPALE   !!= * @CODE@ Penultimate Palatalisation
 %^PenPALÄ   !!= * @CODE@ Penultimate Palatalisation
 %^PenPALẸ   !!= * @CODE@ Penultimate Palatalisation
 %^RmVow !!= * @CODE@ for removing vowels e, â, a after final consonant in stem
 %^PenRmVow !!= * @CODE@ for removing penultimate vowels e, â, a, i.e. vowel befor final stem consonant/consonants
%^VC         !!= * @CODE@ Voicing s:z š:ž
%^VOWBack  !!= * @CODE@ for backing
%^VOWFront  !!= * @CODE@ for fronting
%^VOWL      !!= * @CODE@ for lengthening BEING PHASED OUT
%^VOWLower  !!= * @CODE@ for lowering
%^VOWRaise  !!= * @CODE@ for raising
%^VOWSH 	!!= * @CODE@ for shortening
%^VOWXSH	  !!= * @CODE@ for extra shortening
%^VOWTense  !!= * @CODE@ for tense vowel miârr:mieʹrre
%^VOWLax   !!= * @CODE@ e:â
%^VOWXL     !!= * @CODE@ for extralengthening
%^Â		!!= * @CODE@ Indicates placement of â in stem


%{VU%}         !!= * @CODE@ used with stuuʹl
%{A1%}         !!= * @CODE@ used with vuejted
%{E1%}         !!= * @CODE@ used with kåʹmrded
%{Â1%}         !!= * @CODE@ used with mainsted
%{%ʹ%}      !!= * @CODE@ archiform for MODIFIER LETTER ACUTE ACCENT used in stems where the lemma does not contain a MODIFIER LETTER ACUTE ACCENT and yet the paradigm requires one.
%{EÂ%} 	    !!= * @CODE@ archiform for ie:eä variation, e.g. pieʹǩǩ+N+Sg+Ill:peâkka
!! !Diacritic symbols without mnemonic names
X1 !!= * @CODE@
X2 !!= * @CODE@
X3 !!= * @CODE@
X4 !!= * @CODE@
X5 !!= * @CODE@
X6 !!= * @CODE@
X7 !!= * @CODE@
X8 !!= * @CODE@
X9 !!= * @CODE@

Q3 !!= * @CODE@
Q4 !!= * @CODE@
Q5 !!= * @CODE@
Q6 !!= * @CODE@
Q7 !!= * @CODE@
Q8 !!= * @CODE@
Q9 !!= * @CODE@



!! !!Escaped symbols

!! Symbols that need to be escaped on the lower side (towards twolc):
 »7     !! * »
 «7     !! * «
 %[%>%] !! * >
 %[%<%] !! * <

!! The Usage extents are marked using following tags:

 +Err/Sub     !!= * @CODE@ 
 +Use/Marg        !!= * __@CODE@__ marginal (?)
 +Use/-Spell      !!= * __@CODE@__ Excluded in speller
 +Use/SpellNoSugg !!= * __@CODE@__ recognized but not suggested in speller
 +Use/Circ        !!= * __@CODE@__ circular paths (old ^C^)
 +Use/CircN       !!= * __@CODE@__ circular paths for the numerals (old ^N^)
 +Use/NG          !!= * __@CODE@__ not-generate, for ped generation isme-ped.fst

!! Compounding
+Cmp

!! !!Flag diacritics
!! We have manually optimised the structure of our lexicon using following
!! flag diacritics to restrict morhpological combinatorics - only allow compounds
!! with verbs if the verb is further derived into a noun again:
 @P.NeedNoun.ON@    !!≈ | @CODE@ | (Dis)allow compounds with verbs unless nominalised
 @D.NeedNoun.ON@    !!≈ | @CODE@ | (Dis)allow compounds with verbs unless nominalised
 @C.NeedNoun@       !!≈ | @CODE@ | (Dis)allow compounds with verbs unless nominalised
!! 
!! For languages that allow compounding, the following flag diacritics are needed
!! to control position-based compounding restrictions for nominals. Their use is
!! handled automatically if combined with +CmpN/xxx tags. If not used, they will
!! do no harm.
 @P.CmpFrst.FALSE@ !!≈ | @CODE@ | Require that words tagged as such only appear first
 @D.CmpPref.TRUE@  !!≈ | @CODE@ | Block such words from entering ENDLEX
 @P.CmpPref.FALSE@ !!≈ | @CODE@ | Block these words from making further compounds
 @D.CmpLast.TRUE@  !!≈ | @CODE@ | Block such words from entering R
 @D.CmpNone.TRUE@  !!≈ | @CODE@ | Combines with the next tag to prohibit compounding
 @U.CmpNone.FALSE@ !!≈ | @CODE@ | Combines with the prev tag to prohibit compounding
 @P.CmpOnly.TRUE@  !!≈ | @CODE@ | Sets a flag to indicate that the word has passed R
 @D.CmpOnly.FALSE@ !!≈ | @CODE@ | Disallow words coming directly from root.
!! 
!! Use the following flag diacritics to control downcasing of derived proper
!! nouns (e.g. Finnish Pariisi -> pariisilainen). See e.g. North Sámi for how to use
!! these flags. There exists a ready-made regex that will do the actual down-casing
!! given the proper use of these flags.
 @U.Cap.Obl@        !!≈ | @CODE@ | Allowing downcasing of derived names: deatnulasj.
 @U.Cap.Opt@        !!≈ | @CODE@ | Allowing downcasing of derived names: deatnulasj.


!! !!!Basic lexica, pointing to the other lexicon files


LEXICON Root 	  !!= * @CODE@
 AdjectiveRoot ;  !!= * @CODE@
 Adposition ;	  !!= * @CODE@
 NounRoot ;		  !!= * @CODE@
 ProperNoun ;	  !!= * @CODE@
 VerbRoot ;		  !!= * @CODE@
 Adverb ;		  !!= * @CODE@
 Subjunction ;	  !!= * @CODE@
 Conjunction ;	  !!= * @CODE@
 Interjection ;	  !!= * @CODE@
 Pronoun ;		  !!= * @CODE@
 Numeral ;		  !!= * @CODE@
 Punctuation ;	  !!= * @CODE@
 Particle ;	      !!= * @CODE@

 EXCEPTIONS ;

 A_NEWWORDS ;    !!= * @CODE@ These are new adjectives beginning 2015-02-11
 ADP_NEWWORDS ;    !!= * @CODE@ These are new adpositions
 ADV_NEWWORDS ;    !!= * @CODE@ These are new adverbs 
 CC_NEWWORDS ;    !!= * @CODE@ These are new conjunctions
 N_NEWWORDS ;    !!= * @CODE@ These are new nouns beginning 2015-01-10
 PCLE_NEWWORDS ;    !!= * @CODE@ These are particles
 PRON_NEWWORDS ;    !!= * @CODE@ These are pronouns
 PROP_NEWWORDS ;  !!= * @CODE@ These are new proper nouns beginning 2015-03-04 
 V_NEWWORDS ;    !!= * @CODE@ These are new verbs
!! -----


LEXICON nouns
!! This is a temporary solution until nouns are moved to xml
N_NEWWORDS ;

LEXICON WORK_
!! Single form lacking POS designation
+WORK: # ;

LEXICON	INTERJ_
!! Interjections
+Interj: # ;

!! * Postposition ; is still not included
!! * Preposition ;  is still not included


!! CONJUNCTIONS
LEXICON CC_
+CC: # ;

LEXICON CS_
!! Subjunction
+CS: # ;

LEXICON NUM_
+Num: # ;


LEXICON PCLE_
+Pcle: # ;

!! Postpositions with government tagging possible
LEXICON PO_
+Po: # ;

LEXICON PO-GOV-GEN_
+Po+%<gen%>: # ;


!! Prepositions with government tagging possible
LEXICON PR_
+Pr: # ;

LEXICON PR-TEMP-GOV-GEN_
+Pr+Temp+%<gen%>: # ;

LEXICON PR-TEMP-GOV-LOC_
+Pr+Temp+%<loc%>: # ;

